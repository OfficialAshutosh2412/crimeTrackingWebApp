@model CrimeTrackingSystem_CTS_.Models.MissingPersonViewModel
@{
    ViewBag.UserTitle = "Missing Person";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}


@Html.Raw(TempData["SizeError"])
@Html.Raw(TempData["ExtensionError"])
@if ((string)TempData["result"] == "true")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'information recorded'
            });
        });
    </script>
}


@*instruction*@
<div class="instructionForPerson" id="guide-panel">
    <div class="pt-5">
        <h3><i class="fa-solid fa-person-chalkboard"></i> Report Instructions</h3>
        <h6 class="text-danger fw-bolder">फॉर्म भरने के लिए निर्देश |</h6>
    </div>
    <div>
        <ul class="list-unstyled">
            <li><i class="fa-regular fa-hand-point-right"></i> <strong>Police Station : </strong><span class="fw-medium">choose your district police(अपने जिला पुलिस को चुने |)</span> </li>
            <li><i class="fa-regular fa-hand-point-right"></i> <strong>Name : </strong><span class="fw-medium">write name of missing person(गुमशुदा व्यक्ति का नाम लिखें |) </span> </li>
            <li><i class="fa-regular fa-hand-point-right"></i> <strong>Person Phone no. : </strong><span class="fw-medium">name phone number of missing person(गुमशुदा व्यक्ति का फ़ोन नंबर लिखें |)</span> </li>
            <li><i class="fa-regular fa-hand-point-right"></i> <strong>Last Location : </strong><span class="fw-medium">location of person last time(व्यक्ति आखिरी बार जहाँ देखा गया |)</span> </li>
            <li><i class="fa-regular fa-hand-point-right"></i> <strong>Email : </strong><span class="fw-medium">email of person(व्यक्ति का ईमेल आईडी दें |)</span> </li>
            <li><i class="fa-regular fa-hand-point-right"></i> <strong>Reward : </strong><span class="fw-medium">reward on person(ईनाम व्यक्ति को दिया जाने वाला |)</span> </li>
            <li><i class="fa-regular fa-hand-point-right"></i> <strong>Picture Image : </strong><span class="fw-medium">image of missing person(गुमशुदा व्यक्ति की तस्वीर |)</span> </li>
        </ul>
    </div>
    <div class="d-flex justify-content-end">
        <label id="guideClose" class="btn btn-danger" onclick="guideclose()"> close </label>
    </div>
</div>

@using (Html.BeginForm("Person", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="admin-gallery-uploader">
        <h1><i class="fa-solid fa-person"></i> Missing Person</h1>
        <div class="admin-gallery-item">
            <div class="pb-4">
                <label class="btn btn-sm btn-warning fw-semibold" id="guideopen" onclick="guide()">open form guide</label>
            </div>
            <div class="admin-gallery-item-flex">
                <div>
                    <fieldset>
                        <legend>
                            <i class="fa-solid fa-building-shield"></i>
                            @Html.LabelFor(model => model.PoliceStationName)
                        </legend>
                        <small class="text-danger fw-bold">
                            @Html.ValidationMessageFor(model => model.PoliceStationName, "", new { @class = "text-danger fw-bolder" })
                        </small>
                        @Html.DropDownListFor(model => model.PoliceStationName, (IEnumerable<SelectListItem>)ViewBag.OptionList, "--select--", new { @class = "cc-box" })
                    </fieldset>
                </div>
                <div>
                    <fieldset>
                        <legend>
                            <i class="fa-solid fa-person-circle-question"></i>
                            @Html.LabelFor(model => model.Person)
                        </legend>
                        <small class="text-danger fw-bold">
                            @Html.ValidationMessageFor(model => model.Person, "", new { @class = "text-danger fw-bolder" })
                        </small>
                        @Html.EditorFor(model => model.Person, new { htmlAttributes = new { @class = "cc-box" } })
                    </fieldset>
                </div>
                <div>
                    <fieldset>
                        <legend>
                            <i class="fa-solid fa-location-dot"></i>
                            @Html.LabelFor(model => model.LastLocation)
                        </legend>
                        <small class="text-danger fw-bold">
                            @Html.ValidationMessageFor(model => model.LastLocation, "", new { @class = "text-danger fw-bolder" })
                        </small>
                        @Html.EditorFor(model => model.LastLocation, new { htmlAttributes = new { @class = "cc-box" } })
                    </fieldset>
                </div>
            </div>
            <div class="admin-gallery-item-flex">
                <div>
                    <fieldset>
                        <legend>
                            <i class="fa-solid fa-envelope"></i>
                            @Html.LabelFor(model => model.PersonEmail)
                        </legend>
                        <small class="text-danger fw-bold">
                            @Html.ValidationMessageFor(model => model.PersonEmail, "", new { @class = "text-danger fw-bolder" })
                        </small>
                        @Html.EditorFor(model => model.PersonEmail, new { htmlAttributes = new { @class = "cc-box" } })
                    </fieldset>
                </div>
                <div>
                    <fieldset>
                        <legend>
                            <i class="fa-solid fa-indian-rupee-sign"></i>
                            @Html.LabelFor(model => model.Ransom)
                        </legend>
                        <small class="text-danger fw-bold">
                            @Html.ValidationMessageFor(model => model.Ransom, "", new { @class = "text-danger fw-bolder" })
                        </small>
                        @Html.EditorFor(model => model.Ransom, new { htmlAttributes = new { @class = "cc-box" } })
                    </fieldset>
                </div>
            </div>
            <div>
                <fieldset>
                    <legend>
                        <i class="fa-solid fa-file-image"></i>
                        @Html.LabelFor(model => model.PersonImage, new { @class = "form-label fw-bolder" })
                    </legend>
                    <input type="file" name="MissingImageFile" class="cc-box" required />
                </fieldset>
            </div>
            <div>
                <fieldset>
                    <legend>
                        <i class="fa-solid fa-file-pen"></i>
                        @Html.LabelFor(model => model.Details)
                    </legend>
                    <small class="text-danger fw-bold">
                        @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger fw-bolder" })
                    </small>
                    @Html.TextAreaFor(model => model.Details, new { @class = "cc-box", rows = "14" })
                </fieldset>
            </div>
            <div style="margin-left:10px;">
                <button class="btn btn-primary" value="upload" id="myButton"><i class="fa-solid fa-paper-plane"></i> send</button>
                <a href="@Url.Action("MissingPersonData", "User")" class="p-2 text-primary fw-bolder" style="font-size:10pt"><i class="fa-regular fa-hand-point-right"></i> click here to show reports you filled...</a>
            </div>
        </div>
    </div>
}

