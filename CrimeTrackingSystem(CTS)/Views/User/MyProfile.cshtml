@model CrimeTrackingSystem_CTS_.Models.SignupViewModel
@{
    ViewBag.UserTitle = "MyProfile";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";

}

@if ((string)TempData["update"] =="true")
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'profile updated '
            });
        });
    </script>
}

<section>
    @if (ViewBag.profile != null)
    {
        <div class="profile">
            <div class="profile-box">
                <label class="text-black" style="cursor:pointer" title="edit profile data" onclick="ShowForm()"><i class="fa-solid fa-pen-to-square"></i></label>
                <div class="profile-img">
                    <img src="@Url.Content(ViewBag.profile.Photo)" alt="profile picture" />
                </div>
                <div class="profile-name">
                    <label>@ViewBag.profile.Username</label>
                </div>
                <div class="profile-data">
                    <div>
                        <p>
                            <i class="fa-solid fa-id-card-clip"></i>
                            <label>Your Portal ID</label>
                        </p>
                        <label>@ViewBag.profile.RegId</label>
                    </div>
                    <div>
                        <p>
                            <i class="fa-solid fa-hashtag"></i>
                            <label>Your Pincode</label>
                        </p>
                        <label>@ViewBag.profile.Pincode</label>
                    </div>
                    <div>
                        <p>
                            <i class="fa-solid fa-venus-mars"></i>
                            <label>Your Gender</label>
                        </p>
                        <label>@ViewBag.profile.Gender</label>
                    </div>
                    <div>
                        <p>
                            <i class="fa-solid fa-heart"></i>
                            <label>Marital Status</label>
                        </p>
                        <label>@ViewBag.profile.Mstatus</label>
                    </div>
                    <div>
                        <p>
                            <i class="fa-solid fa-building-wheat"></i>
                            <label>Living Status</label>
                        </p>
                        <label>@ViewBag.profile.Lstatus</label>
                    </div>
                    <div>
                        <p>
                            <i class="fa-solid fa-id-card"></i>
                            <label>Your Adhaar Number</label>
                        </p>
                        <label>@ViewBag.profile.Adhaar</label>
                    </div>
                </div>
                <div class="profile-foot">
                    <div>
                        <i class="fa-solid fa-envelope"></i>
                        <label>@ViewBag.profile.Email</label>
                    </div>
                    <div>
                        <i class="fa-solid fa-location-dot"></i>
                        <label>@ViewBag.profile.Address</label>
                    </div>
                    <div>
                        <i class="fa-solid fa-phone"></i>
                        <label>@ViewBag.profile.Phone</label>
                    </div>
                </div>
            </div>
        </div>
    }
</section>



<section class="hiddenProfileForm">

    @using (Html.BeginForm("EditProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data", @class = "border-cc" }))
    {
    <div class="signup bg-white">
        <div class="title"><p><i class="fa-solid fa-user-pen"></i> Edit Profile</p><label onclick="HideForm()"><i class="fa-solid fa-xmark"></i></label></div>
        @*first row*@
        <div class="deflex">
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-user"></i>
                    @Html.LabelFor(model => model.Username, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.TextBoxFor(model => model.Username, new { @class = "cc-box" })
            </div>
            <div class="w-100 p-2 visually-hidden">
                <span>
                    <i class="fa-solid fa-key"></i>
                    @Html.LabelFor(model => model.Password, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "cc-box", @readonly = "true" } })
            </div>
            @*<div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-key"></i>
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "cc-box" } })
            </div>*@
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-hashtag"></i>
                    @Html.LabelFor(model => model.Pincode, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "cc-box" } })
            </div>
        </div>
        @*second row*@
        <div class="deflex">
            <div class="w-100 p-2 visually-hidden">
                <span>
                    <i class="fa-solid fa-envelope"></i>
                    @Html.LabelFor(model => model.Email, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "cc-box", @readonly = "true" } })
            </div>

            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-venus-mars"></i>
                    @Html.LabelFor(model => model.Gender, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.DropDownListFor(model => model.Gender, new SelectList(new[] { "Male", "Female", "Transgender" }), "Choose", new { @class = "cc-box" })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-id-card"></i>
                    @Html.LabelFor(model => model.Adhaar, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Adhaar, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Adhaar, new { htmlAttributes = new { @class = "cc-box" } })
            </div>
        </div>
        @*third row*@
        <div class="w-100 p-2">
            <span>
                <i class="fa-solid fa-phone"></i>
                @Html.LabelFor(model => model.Phone, new { @class = "form-label fw-bolder" })
                <br />
                <small>@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger fw-bolder" })</small>
            </span>
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "cc-box" } })
        </div>
        @*fourth row*@
        <div class="deflex">
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-heart"></i>
                    @Html.LabelFor(model => model.Mstatus, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Mstatus, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.DropDownListFor(model => model.Mstatus, new SelectList(new[] { "Married", "Unmarried", "Widow", "Widower", "Divorced" }), "Choose", new { @class = "cc-box" })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-building-wheat"></i>
                    @Html.LabelFor(model => model.Lstatus, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Lstatus, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.DropDownListFor(model => model.Lstatus, new SelectList(new[] { "High Class", "Middle Class", "Lower Class" }), "Choose", new { @class = "cc-box" })
            </div>

        </div>
        @*fifth row*@
        <div class="deflex">

            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-image"></i>
                    @Html.LabelFor(model => model.Photo, new { @class = "form-label fw-bolder" })
                </span>
                <input type="file" class="cc-box" name="ImageFile" />
            </div>
        </div>
        @*sixth row*@
        <div class="deflex visually-hidden">
            <div class="w-100 p-2">
                <i class="fa-brands fa-dev"></i><label class="form-label fw-bolder">Enter Token Number</label>
                <br />
                <small>@Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger fw-bolder" })</small>
                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "cc-box", placeholder = "if you have no token, then type user", @readonly = "true" } })
            </div>
        </div>
        <div class="w-100 p-2">
            <span>
                <i class="fa-solid fa-location-dot"></i>
                @Html.LabelFor(model => model.Address, new { @class = "form-label fw-bolder" })
                <br />
                <small>@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger fw-bolder" })</small>
            </span>
            @Html.TextAreaFor(model => model.Address, new { @class = "cc-box", rows = "5" })
        </div>
        @*buttons row*@
        <button class="btn btn-primary"><i class="fa-solid fa-pen-to-square"></i> update</button>
    </div>
    }
</section>