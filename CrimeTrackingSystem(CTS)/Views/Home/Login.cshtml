@model CrimeTrackingSystem_CTS_.Models.SignupViewModel
@{
    ViewBag.Title = "Login";
}

@if (ViewBag.CredError != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'check your email or password'
            });
        });
    </script>
}
<section class="SigninSection">

    @using (Html.BeginForm("Login", "Home", FormMethod.Post))
    {
        @*login*@
        <div class="signin bg-white p-5 rounded">
            <h1 style="color: #4da065;"><i class="fa-solid fa-user-lock"></i> Login</h1>
            <div class="mb-3">
                <span>
                    <i class="fa-solid fa-envelope"></i>
                    @Html.LabelFor(model => model.Email, new { @class = "form-label fw-bolder fs-6" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger fw-bolder " })
                </span>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "cc-box", id = "loginEmail" } })
            </div>
            <div class="mb-3">
                <span>
                    <i class="fa-solid fa-key"></i>
                    @Html.LabelFor(model => model.Password, new { @class = "form-label fw-bolder fs-6" })
                    <br />
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger fw-bolder " })
                </span>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "cc-box", id = "loginPassword" } })
            </div>
            <div class="d-flex justify-content-start align-items-center">
                <button type="submit" class="btn btn-success border border-1 border-success mb-3" id="myButton" >login</button>
            </div>
            <label onclick="ShowSignup()" class="text-dark fw-bolder toggler">click here to create account...</label>
        </div>
        <div id="LoginLoader" class="loadingElementStyle">
            <img src="~/Images/loader/5.gif" />
            <img src="~/Images/loader/279.gif" />
        </div>
    }
</section>
@*signupform*@
<section class="HideSignup">
    @using (Ajax.BeginForm("Signup", "Home", new AjaxOptions()
    {
        HttpMethod = "POST",
        LoadingElementId = "SignupLoader",
        OnSuccess = "SignupSuccess"
    }, new { enctype = "multipart/form-data" }))
    {
        <div class="signup shadow-lg p-5 bg-white ">
            <div class="title"><p><i class="fa-solid fa-user-plus"></i> Signup</p><label onclick="HideSignup()"><i class="fa-solid fa-xmark"></i></label></div>
            @*first row*@
            <div class="deflex">
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-user"></i>
                        @Html.LabelFor(model => model.Username, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.TextBoxFor(model => model.Username, new { @class = "cc-box", id = "username" })
                </div>
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-key"></i>
                        @Html.LabelFor(model => model.Password, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "cc-box", id = "password" } })
                </div>
            </div>
            @*second row*@
            <div class="deflex">
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-envelope"></i>
                        @Html.LabelFor(model => model.Email, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "cc-box", id = "email" } })
                </div>
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-hashtag"></i>
                        @Html.LabelFor(model => model.Pincode, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "cc-box", id = "pincode" } })
                </div>
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-venus-mars"></i>
                        @Html.LabelFor(model => model.Gender, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new[] { "Male", "Female", "Transgender" }), "Choose", new { @class = "cc-box", id = "gender" })
                </div>
            </div>
            @*third row*@
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-location-dot"></i>
                    @Html.LabelFor(model => model.Address, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.TextAreaFor(model => model.Address, new { @class = "cc-box", rows = "1", id = "address" })
            </div>
            @*fourth row*@
            <div class="deflex">
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-heart"></i>
                        @Html.LabelFor(model => model.Mstatus, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Mstatus, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.DropDownListFor(model => model.Mstatus, new SelectList(new[] { "Married", "Unmarried", "Widow", "Widower", "Divorced" }), "Choose", new { @class = "cc-box", id = "mstatus" })
                </div>
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-building-wheat"></i>
                        @Html.LabelFor(model => model.Lstatus, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Lstatus, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.DropDownListFor(model => model.Lstatus, new SelectList(new[] { "High Class", "Middle Class", "Lower Class" }), "Choose", new { @class = "cc-box", id = "lstatus" })
                </div>
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-id-card"></i>
                        @Html.LabelFor(model => model.Adhaar, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Adhaar, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.EditorFor(model => model.Adhaar, new { htmlAttributes = new { @class = "cc-box", id = "adhaar" } })
                </div>
            </div>
            @*fifth row*@
            <div class="deflex">
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-phone"></i>
                        @Html.LabelFor(model => model.Phone, new { @class = "form-label fw-bolder" })
                        <br />
                        <small>@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger fw-bolder" })</small>
                    </span>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "cc-box", id = "phone" } })
                </div>
                <div class="w-100 p-2">
                    <span>
                        <i class="fa-solid fa-image"></i>
                        @Html.LabelFor(model => model.Photo, new { @class = "form-label fw-bolder" })
                    </span>
                    <input type="file" class="cc-box" name="ImageFile" required id="image" />
                </div>
            </div>
            @*sixth row*@
            <div class="deflex">
                <div class="w-100 p-2">
                    <i class="fa-brands fa-dev"></i><label class="form-label fw-bolder">Enter Token Number</label>
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger fw-bolder" })</small>
                    @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "cc-box", id = "role", placeholder = "if you have no token, then type user" } })
                </div>
            </div>
            @*buttons row*@
            <input type="submit" class="send" value="signup now" onclick="return signupCheck()" />
        </div>
        <div id="SignupLoader" class="loadingElementStyle">
            <img src="~/Images/loader/5.gif" />
            <img src="~/Images/loader/279.gif" />
        </div>
    }
</section>