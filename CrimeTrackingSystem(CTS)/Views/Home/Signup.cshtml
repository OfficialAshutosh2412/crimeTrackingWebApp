@model CrimeTrackingSystem_CTS_.Models.SignupViewModel
@{
    ViewBag.Title = "Signup";
}

@Html.Raw(TempData["SizeError"])
@Html.Raw(TempData["ExtensionError"])


@using (Html.BeginForm("Signup", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="signup shadow-lg p-5 bg-white round">
        <h1 class="p-2 ">Signup</h1>
        @*first row*@
        <div class="deflex">
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-user"></i>
                    @Html.LabelFor(model => model.Username, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.TextBoxFor(model => model.Username, new { @class = "cc-box" })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-key"></i>
                    @Html.LabelFor(model => model.Password, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "cc-box" } })
            </div>
        </div>
        @*second row*@
        <div class="deflex">
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-envelope"></i>
                    @Html.LabelFor(model => model.Email, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "cc-box" } })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-hashtag"></i>
                    @Html.LabelFor(model => model.Pincode, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "cc-box" } })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-venus-mars"></i>
                    @Html.LabelFor(model => model.Gender, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.DropDownListFor(model => model.Gender, new SelectList(new[] { "Male", "Female", "Transgender" }), "Choose", new { @class = "cc-box" })
            </div>
        </div>
        @*third row*@
        <div class="w-100 p-2">
            <span>
                <i class="fa-solid fa-location-dot"></i>
                @Html.LabelFor(model => model.Address, new { @class = "form-label fw-bolder" })
                <br />
                <small>@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger fw-bolder" })</small>
            </span>
            @Html.TextAreaFor(model => model.Address, new { @class = "cc-box", rows = "1" })
        </div>
        @*fourth row*@
        <div class="deflex">
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-heart"></i>
                    @Html.LabelFor(model => model.Mstatus, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Mstatus, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.DropDownListFor(model => model.Mstatus, new SelectList(new[] { "Married", "Unmarried", "Widow", "Widower", "Divorced" }), "Choose", new { @class = "cc-box" })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-building-wheat"></i>
                    @Html.LabelFor(model => model.Lstatus, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Lstatus, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.DropDownListFor(model => model.Lstatus, new SelectList(new[] { "High Class", "Middle Class", "Lower Class" }), "Choose", new { @class = "cc-box" })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-id-card"></i>
                    @Html.LabelFor(model => model.Adhaar, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Adhaar, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Adhaar, new { htmlAttributes = new { @class = "cc-box" } })
            </div>
        </div>
        @*fifth row*@
        <div class="deflex">
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-phone"></i>
                    @Html.LabelFor(model => model.Phone, new { @class = "form-label fw-bolder" })
                    <br />
                    <small>@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger fw-bolder" })</small>
                </span>
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "cc-box" } })
            </div>
            <div class="w-100 p-2">
                <span>
                    <i class="fa-solid fa-image"></i>
                    @Html.LabelFor(model => model.Photo, new { @class = "form-label fw-bolder" })
                </span>
                <input type="file" class="cc-box" name="ImageFile" required />
            </div>
        </div>
        @*sixth row*@
        <div class="deflex">
            <div class="w-100 p-2">
                <i class="fa-brands fa-dev"></i><label class="form-label fw-bolder">Enter Token Number</label>
                <br />
                <small>@Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger fw-bolder" })</small>
                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "cc-box", placeholder = "if you have no token, then type user" } })
            </div>
        </div>
        @*buttons row*@
        <input type="submit" class="send" value="signup now" />
        <a href="@Url.Action("Login","Home")" class="text-secondary ">click here to login...</a>
    </div>
}